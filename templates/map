<!DOCTYPE HTML>
<html>
  <head>
    <title>GoNordVPN</title>
    <style type="text/css">
      html, body, #basicMap {
          width: 100%;
          height: 100%;
          margin: 0;
      }
    </style>
    <script src="/OpenLayers.js"></script>
    <script>
      var markers = new OpenLayers.Layer.Markers("Markers");
      var fromProjection = new OpenLayers.Projection("EPSG:4326");
      var toProjection   = new OpenLayers.Projection("EPSG:900913");
      var proto = "udp";
      var last = null;

      var marks = [
        {{range $i, $e := .}}
        {country:{{$e.Country}},lat:{{$e.Location.Lat}},lon:{{$e.Location.Long}},marker:{} },
        {{end}}
      ];

      function compare(m, mark) {
        if (((m.lat < mark.lat+2) &&
          (m.lat > mark.lat-1)) &&
          ((m.lon < mark.lon+1) &&
            (m.lon > mark.lon-1))) {
          return true;
        }
        return false;
      }

      function connect(mark) {
        var http = new XMLHttpRequest();
        http.onreadystatechange = function() {
          if (this.readyState == 4 && this.status == 200) {
            if (last != null){
              last.marker.icon.setUrl("http://maps.google.com/mapfiles/ms/icons/blue-dot.png");
            }
            last = mark;
            mark.marker.icon.setUrl("http://maps.google.com/mapfiles/ms/icons/red-dot.png");
          }
        };
        http.open("GET", "http://localhost:9114/"+mark.country+"/"+proto);
        http.send();
      }

      OpenLayers.Control.Click = OpenLayers.Class(OpenLayers.Control, {
        defaultHandlerOptions: {
          'single': true,
          'double': false,
          'pixelTolerance': 0,
          'stopSingle': false,
          'stopDouble': false
        },

        initialize: function(options) {
          this.handlerOptions = OpenLayers.Util.extend(
            {}, this.defaultHandlerOptions
          );
          OpenLayers.Control.prototype.initialize.apply(
            this, arguments
          );
          this.handler = new OpenLayers.Handler.Click(
            this, {
            'click': this.trigger
            }, this.handlerOptions
          );
        },
        trigger: function(e) {
          var lonlat = map.getLonLatFromPixel(e.xy);
          lonlat = new OpenLayers.LonLat(lonlat.lon, lonlat.lat).transform(toProjection, fromProjection)
          for (var i = 0; i < marks.length; i++){
            if (compare(lonlat, marks[i])) {
              connect(marks[i]);
              break;
            }
          }
        }
      });

      function addmark(mark) {
        var size = new OpenLayers.Size(30,30);
        var offset = new OpenLayers.Pixel(-(size.w/2), -size.h);
        var icon = new OpenLayers.Icon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png', size, offset);
        var position = new OpenLayers.LonLat(mark.lon, mark.lat).transform(fromProjection, toProjection);
        mark.marker = new OpenLayers.Marker(position, icon);
        markers.addMarker(mark.marker);
        return mark
      }

      function init() {
        map = new OpenLayers.Map("basicMap");
        var mapnik         = new OpenLayers.Layer.OSM();
        var position       = new OpenLayers.LonLat(0,38).transform(fromProjection, toProjection);
        var zoom           = 4; 
        map.addLayer(mapnik);
        map.addLayer(markers);

        for (var i = 0; i < marks.length; i++){
          marks[i] = addmark(marks[i])
        }

        map.setCenter(position, zoom);
        var click = new OpenLayers.Control.Click();
        map.addControl(click);
        click.activate();
      }
    </script>
  </head>
  <body onload="init()">
    <div id="basicMap"></div>
  </body>
</html>
